// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// End timestamp for the query range (exclusive)
    public enum QueryParamTo {
        case dateTime(Date)
        case integer(Int)
    }
}

extension Operations.QueryParamTo: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Date(from: decoder) {
            self = .dateTime(value)
        } else if let value = try? Int(from: decoder) {
            self = .integer(value)
        } else {
            throw LivepeerError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .dateTime(let value):
            try value.encode(to: encoder)
        case .integer(let value):
            try value.encode(to: encoder)
        }
    }
}

