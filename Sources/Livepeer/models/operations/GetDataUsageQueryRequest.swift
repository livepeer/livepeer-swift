// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetDataUsageQueryRequest: APIValue {
        /// The creator ID to filter the query results
        /// 
        public let creatorId: String?
        /// Start millis timestamp for the query range (inclusive)
        /// 
        public let from: Int?
        /// The time step to aggregate viewership metrics by
        /// 
        public let timeStep: Operations.GetDataUsageQueryQueryParamTimeStep?
        /// End millis timestamp for the query range (exclusive)
        /// 
        public let to: Int?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter creatorId: The creator ID to filter the query results
        /// 
        /// - Parameter from: Start millis timestamp for the query range (inclusive)
        /// 
        /// - Parameter timeStep: The time step to aggregate viewership metrics by
        /// 
        /// - Parameter to: End millis timestamp for the query range (exclusive)
        /// 
        ///
        public init(creatorId: String? = nil, from: Int? = nil, timeStep: Operations.GetDataUsageQueryQueryParamTimeStep? = nil, to: Int? = nil) {
            self.creatorId = creatorId
            self.from = from
            self.timeStep = timeStep
            self.to = to
        }
    }
}
