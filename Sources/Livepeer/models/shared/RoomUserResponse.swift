// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct RoomUserResponse {
        /// The ID of the user
        public let id: String?
        /// Joining URL - use this for Livepeer's default meeting app (see the multiparticipant streaming guide for more info).
        public let joinUrl: String?
        /// Joining JWT - this can be used if you have a custom meeting app (see the multiparticipant streaming guide for more info).
        public let token: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter id: The ID of the user
        /// - Parameter joinUrl: Joining URL - use this for Livepeer's default meeting app (see the multiparticipant streaming guide for more info).
        /// - Parameter token: Joining JWT - this can be used if you have a custom meeting app (see the multiparticipant streaming guide for more info).
        ///
        public init(id: String? = nil, joinUrl: String? = nil, token: String? = nil) {
            self.id = id
            self.joinUrl = joinUrl
            self.token = token
        }
    }
}

extension Shared.RoomUserResponse: Codable {
    enum CodingKeys: String, CodingKey {
        case id
        case joinUrl
        case token
    }
}

