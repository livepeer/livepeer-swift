// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct Tasks {
        /// ID of the last task to fail execution.
        public let failed: String?
        /// ID of the last task to run successfully, that created
        /// the currently saved data.
        /// 
        public let last: String?
        /// ID of any currently running task that is exporting this
        /// asset to IPFS.
        /// 
        public let pending: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter failed: ID of the last task to fail execution.
        /// - Parameter last: ID of the last task to run successfully, that created
        /// the currently saved data.
        /// 
        /// - Parameter pending: ID of any currently running task that is exporting this
        /// asset to IPFS.
        /// 
        ///
        public init(failed: String? = nil, last: String? = nil, pending: String? = nil) {
            self.failed = failed
            self.last = last
            self.pending = pending
        }
    }
}

extension Shared.Tasks: Codable {
    enum CodingKeys: String, CodingKey {
        case failed
        case last
        case pending
    }
}

