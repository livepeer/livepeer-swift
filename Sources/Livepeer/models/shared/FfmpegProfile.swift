// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// LMPS ffmpeg profile
    public struct FfmpegProfile {
        public let bitrate: Int
        public let fps: Int
        public let height: Int
        public let name: String
        public let width: Int
        public let encoder: Shared.Encoder?
        public let fpsDen: Int?
        public let gop: String?
        public let profile: Shared.Profile?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(bitrate: Int, fps: Int, height: Int, name: String, width: Int, encoder: Shared.Encoder? = nil, fpsDen: Int? = nil, gop: String? = nil, profile: Shared.Profile? = nil) {
            self.bitrate = bitrate
            self.fps = fps
            self.height = height
            self.name = name
            self.width = width
            self.encoder = encoder
            self.fpsDen = fpsDen
            self.gop = gop
            self.profile = profile
        }
    }
}

extension Shared.FfmpegProfile: Codable {
    enum CodingKeys: String, CodingKey {
        case bitrate
        case fps
        case height
        case name
        case width
        case encoder
        case fpsDen
        case gop
        case profile
    }
}

