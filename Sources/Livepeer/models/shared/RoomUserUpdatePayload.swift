// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct RoomUserUpdatePayload {
        /// Whether a user is allowed to publish audio/video tracks (i.e. their microphone and webcam)
        public let canPublish: Bool?
        /// User defined payload to store for the participant
        public let metadata: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter canPublish: Whether a user is allowed to publish audio/video tracks (i.e. their microphone and webcam)
        /// - Parameter metadata: User defined payload to store for the participant
        ///
        public init(canPublish: Bool? = nil, metadata: String? = nil) {
            self.canPublish = canPublish
            self.metadata = metadata
        }
    }
}

extension Shared.RoomUserUpdatePayload: Codable {
    enum CodingKeys: String, CodingKey {
        case canPublish
        case metadata
    }
}

