// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct Hash {
        /// Hash algorithm used to compute the hash
        public let algorithm: String?
        /// Hash of the asset
        public let hash: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter algorithm: Hash algorithm used to compute the hash
        /// - Parameter hash: Hash of the asset
        ///
        public init(algorithm: String? = nil, hash: String? = nil) {
            self.algorithm = algorithm
            self.hash = hash
        }
    }
}

extension Shared.Hash: Codable {
    enum CodingKeys: String, CodingKey {
        case algorithm
        case hash
    }
}

