// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct RoomUserPayload {
        /// Display name
        public let name: String
        /// Whether a user is allowed to publish audio/video tracks
        public let canPublish: Bool?
        /// Whether a user is allowed to publish data messages to the room
        public let canPublishData: Bool?
        /// User defined payload to store for the participant
        public let metadata: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter name: Display name
        /// - Parameter canPublish: Whether a user is allowed to publish audio/video tracks
        /// - Parameter canPublishData: Whether a user is allowed to publish data messages to the room
        /// - Parameter metadata: User defined payload to store for the participant
        ///
        public init(name: String, canPublish: Bool? = nil, canPublishData: Bool? = nil, metadata: String? = nil) {
            self.name = name
            self.canPublish = canPublish
            self.canPublishData = canPublishData
            self.metadata = metadata
        }
    }
}

extension Shared.RoomUserPayload: Codable {
    enum CodingKeys: String, CodingKey {
        case name
        case canPublish
        case canPublishData
        case metadata
    }
}

