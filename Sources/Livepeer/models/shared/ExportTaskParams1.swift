// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public enum ExportTaskParams1 {
        case exportTaskParamsSchemas1(Shared.ExportTaskParamsSchemas1)
        case exportTaskParamsSchemas2(Shared.ExportTaskParamsSchemas2)
    }
}

extension Shared.ExportTaskParams1: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Shared.ExportTaskParamsSchemas1(from: decoder) {
            self = .exportTaskParamsSchemas1(value)
        } else if let value = try? Shared.ExportTaskParamsSchemas2(from: decoder) {
            self = .exportTaskParamsSchemas2(value)
        } else {
            throw LivepeerError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .exportTaskParamsSchemas1(let value):
            try value.encode(to: encoder)
        case .exportTaskParamsSchemas2(let value):
            try value.encode(to: encoder)
        }
    }
}

