// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// Storage for the output files
    public struct TranscodePayloadSchemas2 {
        /// Delegation proof for Livepeer to be able to upload to
        /// web3.storage
        /// 
        public let credentials: Shared.TranscodePayloadSchemasCredentials
        /// Type of service used for output files
        public let type: Shared.TranscodePayloadSchemasStorageType

        /// Creates an object with the specified parameters
        ///
        /// - Parameter credentials: Delegation proof for Livepeer to be able to upload to
        /// web3.storage
        /// 
        /// - Parameter type: Type of service used for output files
        ///
        public init(credentials: Shared.TranscodePayloadSchemasCredentials, type: Shared.TranscodePayloadSchemasStorageType) {
            self.credentials = credentials
            self.type = type
        }
    }
}

extension Shared.TranscodePayloadSchemas2: Codable {
    enum CodingKeys: String, CodingKey {
        case credentials
        case type
    }
}

