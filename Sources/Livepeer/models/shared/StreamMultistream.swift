// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct StreamMultistream {
        /// References to targets where this stream will be simultaneously
        /// streamed to
        /// 
        public let targets: [Shared.TargetOutput]?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter targets: References to targets where this stream will be simultaneously
        /// streamed to
        /// 
        ///
        public init(targets: [Shared.TargetOutput]? = nil) {
            self.targets = targets
        }
    }
}

extension Shared.StreamMultistream: Codable {
    enum CodingKeys: String, CodingKey {
        case targets
    }
}

