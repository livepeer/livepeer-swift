// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct Participants {
        /// participant ID
        public let identity: String?
        /// the time the participant joined
        public let joinedAt: Int?
        /// the time the participant left
        public let leftAt: Int?
        /// user defined participant name
        public let name: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter identity: participant ID
        /// - Parameter joinedAt: the time the participant joined
        /// - Parameter leftAt: the time the participant left
        /// - Parameter name: user defined participant name
        ///
        public init(identity: String? = nil, joinedAt: Int? = nil, leftAt: Int? = nil, name: String? = nil) {
            self.identity = identity
            self.joinedAt = joinedAt
            self.leftAt = leftAt
            self.name = name
        }
    }
}

extension Shared.Participants: Codable {
    enum CodingKeys: String, CodingKey {
        case identity
        case joinedAt
        case leftAt
        case name
    }
}

